# Primary workflow for building, testing, and deploying the download server packages.
name: Publish Docker image
on:
  # Release a new build anytime a release change is published to the repository
  push:
    branches:
      - '*'           # matches every branch that doesn't contain a '/'
      - '*/*'         # matches every branch containing a single '/'
      - '**'          # matches every branch
      - '!gh-pages'   # excludes gh-pages

  # Create a latest image and deploy changes to Github Pages on a version publish
  release:
    types: [published]

  # Allow manual deployments from Github's UI/API
  workflow_dispatch:

# Define workflow constants as environment variables
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Publishes the download server Docker images to all supported repositories
  push_to_registries:
    name: Push Docker image to container registries

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Define the job's permissions
    permissions:
      packages: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the release branch of the repository under $GITHUB_WORKSPACE
      - name: Check out the repo
        uses: actions/checkout@v2
      
      # Authenticate with the Github packages registry prior to building/pushing
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Extract metadata about this job execution and pack it into the various outgoing Docker images
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      # Deploy our created Docker images to the supported registries
      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Deploys a static version of the download server to Github Pages
  deploy_to_github_pages:
    name: Deploy to Github Pages

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Define the job's permissions
    permissions:
      packages: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the release branch of the repository under $GITHUB_WORKSPACE
      - name: Check out the repo
        uses: actions/checkout@v2

      # Prepares a static version of the Toontown download server for Github Pages
      - name: Prepare static version of download server
        run: |
          mkdir ./build
          cp -a ./htdocs/toontown/. ./build/toontown
          php ./htdocs/constants.php > ./build/constants.html

      # Deploy the finalized static download server to Github Pages
      - name: Deploy to Github Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build # The folder the action should deploy.